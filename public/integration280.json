{
    "bom": {
        "apiVersion": "cloud.ibm.com/v1alpha1",
        "kind": "BillOfMaterial",
        "metadata": {
            "name": "280-integration-platform-multicloud",
            "labels": {
                "type": "software",
                "code": "280"
            },
            "annotations": {
                "displayName": "Integration Platform - Cloud Pak for Integration",
                "description": "GitOps deployment of Cloud Pak for Integration",
                "deployment-type/gitops": "true"
            }
        },
        "spec": {
            "modules": [
                {
                    "name": "ocp-login",
                    "alias": "cluster",
                    "version": "v1.2.12",
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [],
                        "variables": [
                            {
                                "name": "server_url",
                                "type": "string",
                                "description": "The url for the OpenShift api",
                                "scope": "global"
                            },
                            {
                                "name": "login_user",
                                "type": "string",
                                "description": "Username for login",
                                "default": ""
                            },
                            {
                                "name": "login_password",
                                "type": "string",
                                "description": "Password for login",
                                "default": "",
                                "sensitive": true
                            },
                            {
                                "name": "login_token",
                                "type": "string",
                                "description": "Token used for authentication",
                                "sensitive": true
                            },
                            {
                                "name": "skip",
                                "type": "bool",
                                "description": "Flag indicating that the cluster login has already been performed",
                                "default": false
                            },
                            {
                                "name": "cluster_version",
                                "type": "string",
                                "description": "[Deprecated] The version of the cluster (passed through to the output)",
                                "default": ""
                            },
                            {
                                "name": "ingress_subdomain",
                                "type": "string",
                                "description": "[Deprecated] The ingress subdomain of the cluster (passed through to the output)",
                                "default": ""
                            },
                            {
                                "name": "tls_secret_name",
                                "type": "string",
                                "description": "[Deprecated] The name of the secret containing the tls certificates for the ingress subdomain (passed through to the output)",
                                "default": ""
                            },
                            {
                                "name": "ca_cert",
                                "type": "string",
                                "description": "The base64 encoded ca certificate",
                                "default": ""
                            },
                            {
                                "name": "ca_cert_file",
                                "type": "string",
                                "description": "The path to the file that contains the ca certificate",
                                "default": ""
                            }
                        ],
                        "version": "v1.4.2",
                        "outputs": [
                            {
                                "name": "id",
                                "description": "ID of the cluster."
                            },
                            {
                                "name": "name",
                                "description": "Name of the cluster"
                            },
                            {
                                "name": "region",
                                "description": "Region of the cluster"
                            },
                            {
                                "name": "resource_group_name",
                                "description": "Resource group of the cluster"
                            },
                            {
                                "name": "server_url",
                                "description": "The url of the control server."
                            },
                            {
                                "name": "username",
                                "description": "The username of the control server."
                            },
                            {
                                "name": "password",
                                "description": "The password of the control server.",
                                "sensitive": true
                            },
                            {
                                "name": "token",
                                "description": "The token of the control server.",
                                "sensitive": true
                            },
                            {
                                "name": "config_file_path",
                                "description": "Path to the config file for the cluster."
                            },
                            {
                                "name": "platform",
                                "type": {
                                    "lines": [
                                        "\"openshift\""
                                    ]
                                },
                                "description": "Configuration values for the cluster platform"
                            }
                        ]
                    }
                },
                {
                    "name": "olm",
                    "version": "v1.3.2",
                    "enrichedMetadata": {
                        "dependencies": [
                            {
                                "id": "cluster",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-ibm-container-platform",
                                        "version": ">= 1.7.0"
                                    },
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc",
                                        "version": ">= 1.0.0"
                                    },
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-ibm-iks-vpc",
                                        "version": ">= 1.0.0"
                                    },
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster",
                                        "version": ">= 2.0.0"
                                    },
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-ocp-login",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "cluster_config_file",
                                "moduleRef": {
                                    "id": "cluster",
                                    "output": "config_file_path"
                                },
                                "type": "string",
                                "description": "Cluster config file for Kubernetes cluster."
                            },
                            {
                                "name": "cluster_type",
                                "moduleRef": {
                                    "id": "cluster",
                                    "output": "platform.type_code"
                                },
                                "type": "string",
                                "description": "The type of cluster (openshift or kubernetes)"
                            },
                            {
                                "name": "cluster_version",
                                "moduleRef": {
                                    "id": "cluster",
                                    "output": "platform.version"
                                },
                                "type": "string",
                                "description": "The version of cluster"
                            },
                            {
                                "name": "olm_version",
                                "scope": "ignore",
                                "type": "string",
                                "description": "The version of olm that will be installed",
                                "default": "0.18.1",
                                "optional": true
                            }
                        ],
                        "version": "v1.3.2",
                        "outputs": [
                            {
                                "name": "olm_namespace",
                                "description": "Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11"
                            },
                            {
                                "name": "target_namespace",
                                "description": "Namespace where operatoes will be installed"
                            }
                        ]
                    }
                },
                {
                    "name": "sealed-secret-cert",
                    "version": "v1.0.1",
                    "enrichedMetadata": {
                        "platforms": [
                            "kubernetes",
                            "ocp3",
                            "ocp4"
                        ],
                        "dependencies": [],
                        "variables": [
                            {
                                "name": "cert",
                                "type": "string",
                                "description": "The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated",
                                "default": ""
                            },
                            {
                                "name": "private_key",
                                "type": "string",
                                "description": "The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated",
                                "default": ""
                            },
                            {
                                "name": "cert_file",
                                "type": "string",
                                "description": "The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated",
                                "default": ""
                            },
                            {
                                "name": "private_key_file",
                                "type": "string",
                                "description": "The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated",
                                "default": ""
                            }
                        ],
                        "version": "v1.0.1",
                        "outputs": [
                            {
                                "name": "private_key",
                                "sensitive": true
                            },
                            {
                                "name": "cert"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-repo",
                    "alias": "gitops_repo",
                    "version": "v1.16.0",
                    "enrichedMetadata": {
                        "platforms": [],
                        "dependencies": [
                            {
                                "id": "cert",
                                "optional": true,
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "gitea",
                                "optional": true,
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitea",
                                        "version": ">= 0.3.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "host",
                                "type": "string",
                                "description": "The host for the git repository. The git host used can be a GitHub, GitHub Enterprise, Gitlab, Bitbucket, Gitea or Azure DevOps server. If the host is null assumes in-cluster Gitea instance will be used.",
                                "default": "",
                                "important": true
                            },
                            {
                                "name": "type",
                                "type": "string",
                                "description": "[Deprecated] The type of the hosted git repository.",
                                "default": ""
                            },
                            {
                                "name": "org",
                                "type": "string",
                                "description": "The org/group where the git repository exists/will be provisioned. If the value is left blank then the username org will be used.",
                                "default": "",
                                "important": true
                            },
                            {
                                "name": "project",
                                "type": "string",
                                "description": "The project that will be used for the git repo. (Primarily used for Azure DevOps repos)",
                                "default": "",
                                "important": true
                            },
                            {
                                "name": "username",
                                "type": "string",
                                "description": "The username of the user with access to the repository",
                                "default": "",
                                "important": true
                            },
                            {
                                "name": "token",
                                "type": "string",
                                "description": "The personal access token used to access the repository",
                                "sensitive": true,
                                "default": "",
                                "important": true
                            },
                            {
                                "name": "gitea_host",
                                "type": "string",
                                "description": "The host for the default gitea repository.",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitea",
                                    "output": "host"
                                }
                            },
                            {
                                "name": "gitea_org",
                                "type": "string",
                                "description": "The org/group for the default gitea repository. If not provided, the value will default to the username org",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitea",
                                    "output": "org"
                                }
                            },
                            {
                                "name": "gitea_username",
                                "type": "string",
                                "description": "The username of the default gitea repository",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitea",
                                    "output": "username"
                                }
                            },
                            {
                                "name": "gitea_token",
                                "type": "string",
                                "description": "The personal access token used to access the repository",
                                "sensitive": true,
                                "default": "",
                                "moduleRef": {
                                    "id": "gitea",
                                    "output": "token"
                                }
                            },
                            {
                                "name": "repo",
                                "type": "string",
                                "description": "The short name of the repository (i.e. the part after the org/group name)"
                            },
                            {
                                "name": "branch",
                                "type": "string",
                                "description": "The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well",
                                "default": "main"
                            },
                            {
                                "name": "public",
                                "type": "bool",
                                "description": "Flag indicating that the repo should be public or private",
                                "default": false
                            },
                            {
                                "name": "gitops_namespace",
                                "type": "string",
                                "description": "The namespace where ArgoCD is running in the cluster",
                                "default": "openshift-gitops"
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the cluster that will be configured via gitops. This is used to separate the config by cluster",
                                "default": "default"
                            },
                            {
                                "name": "sealed_secrets_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "default": "",
                                "moduleRef": {
                                    "id": "cert",
                                    "output": "cert"
                                }
                            },
                            {
                                "name": "strict",
                                "type": "bool",
                                "description": "Flag indicating that an error should be thrown if the repo already exists",
                                "default": false
                            },
                            {
                                "name": "debug",
                                "type": "bool",
                                "description": "Flag indicating that debug loggging should be enabled",
                                "default": false,
                                "scope": "global"
                            }
                        ],
                        "version": "v1.20.5",
                        "outputs": [
                            {
                                "name": "config_host",
                                "description": "The host name of the bootstrap git repo"
                            },
                            {
                                "name": "config_org",
                                "description": "The org name of the bootstrap git repo"
                            },
                            {
                                "name": "config_name",
                                "description": "The repo name of the bootstrap git repo"
                            },
                            {
                                "name": "config_project",
                                "description": "The project name of the bootstrap git repo (for Azure DevOps)"
                            },
                            {
                                "name": "config_repo",
                                "description": "The repo that contains the argocd configuration"
                            },
                            {
                                "name": "config_repo_url",
                                "description": "The repo that contains the argocd configuration"
                            },
                            {
                                "name": "config_username",
                                "description": "The username for the config repo"
                            },
                            {
                                "name": "config_token",
                                "description": "The token for the config repo",
                                "sensitive": true
                            },
                            {
                                "name": "config_paths",
                                "description": "The paths in the config repo"
                            },
                            {
                                "name": "config_projects",
                                "description": "The ArgoCD projects for the different layers of the repo"
                            },
                            {
                                "name": "bootstrap_path",
                                "description": "The path to the bootstrap configuration"
                            },
                            {
                                "name": "bootstrap_branch",
                                "description": "The branch in the gitrepo containing the bootstrap configuration"
                            },
                            {
                                "name": "application_repo",
                                "description": "The repo that contains the application configuration"
                            },
                            {
                                "name": "application_repo_url",
                                "description": "The repo that contains the application configuration"
                            },
                            {
                                "name": "application_username",
                                "description": "The username for the application repo"
                            },
                            {
                                "name": "application_token",
                                "description": "The token for the application repo",
                                "sensitive": true
                            },
                            {
                                "name": "application_paths",
                                "description": "The paths in the application repo"
                            },
                            {
                                "name": "gitops_config",
                                "description": "Config information regarding the gitops repo structure"
                            },
                            {
                                "name": "git_credentials",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true
                            },
                            {
                                "name": "server_name",
                                "description": "The name of the cluster that will be configured for gitops"
                            },
                            {
                                "name": "sealed_secrets_cert",
                                "description": "The certificate used to encrypt sealed secrets"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-catalogs",
                    "alias": "gitops-cp-catalogs",
                    "version": "v1.2.1",
                    "variables": [
                        {
                            "name": "entitlement_key",
                            "scope": "global"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "default": "openshift-marketplace"
                            },
                            {
                                "name": "kubeseal_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "sealed_secrets_cert"
                                }
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "entitlement_key",
                                "type": "string",
                                "description": "The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key",
                                "sensitive": true
                            }
                        ],
                        "version": "v1.2.4",
                        "outputs": [
                            {
                                "name": "catalog_ibmoperators",
                                "description": "IBM Operator Catalog name"
                            },
                            {
                                "name": "catalog_commonservices",
                                "description": "IBMCS Operators catalog name"
                            },
                            {
                                "name": "catalog_automationfoundation",
                                "description": "IAF Core Operators catalog name"
                            },
                            {
                                "name": "catalog_processmining",
                                "description": "IBM ProcessMining Operators catalog name"
                            },
                            {
                                "name": "entitlement_key",
                                "description": "Entitlement key"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-mq",
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "default": "openshift-operators"
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "catalog",
                                "type": "string",
                                "description": "The catalog source that should be used to deploy the operator",
                                "default": "ibm-operator-catalog",
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "catalog_ibmoperators"
                                }
                            },
                            {
                                "name": "catalog_namespace",
                                "type": "string",
                                "description": "The namespace where the catalog has been deployed",
                                "default": "openshift-marketplace"
                            },
                            {
                                "name": "channel",
                                "type": "string",
                                "description": "The channel that should be used to deploy the operator",
                                "default": "v1.7",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "mq.channel"
                                }
                            }
                        ],
                        "version": "v1.1.6",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the module will be deployed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            },
                            {
                                "name": "bin_dir"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-ace",
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 0.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "default": "openshift-operators"
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "catalog",
                                "type": "string",
                                "description": "The catalog source that should be used to deploy the operator",
                                "default": "ibm-operator-catalog",
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "catalog_ibmoperators"
                                }
                            },
                            {
                                "name": "catalog_namespace",
                                "type": "string",
                                "description": "The namespace where the catalog has been deployed",
                                "default": "openshift-marketplace"
                            },
                            {
                                "name": "channel",
                                "type": "string",
                                "description": "The channel that should be used to deploy the operator",
                                "default": "v3.0",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "ace.channel"
                                }
                            },
                            {
                                "name": "platform_navigator_name",
                                "type": "string",
                                "description": "The name of the platform navigator instance",
                                "default": ""
                            }
                        ],
                        "version": "v1.0.6",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the module will be deployed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            },
                            {
                                "name": "bin_dir"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-apic-operator",
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 0.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "default": "openshift-operators"
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "catalog",
                                "type": "string",
                                "description": "The catalog source that should be used to deploy the operator",
                                "default": "ibm-operator-catalog",
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "catalog_ibmoperators"
                                }
                            },
                            {
                                "name": "catalog_namespace",
                                "type": "string",
                                "description": "The namespace where the catalog has been deployed",
                                "default": "openshift-marketplace"
                            },
                            {
                                "name": "channel",
                                "type": "string",
                                "description": "The channel that should be used to deploy the operator",
                                "default": "v2.4",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "apic.channel"
                                }
                            }
                        ],
                        "version": "v1.2.6",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the module will be deployed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            },
                            {
                                "name": "bin_dir"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-eventstreams-operator",
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n      payload = object({\n        repo = string\n        url  = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n      payload = object({\n        repo = string\n        url  = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n      payload = object({\n        repo = string\n        url  = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo     = string\n    url      = string\n    username = string\n    token    = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "default": "openshift-operators"
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "catalog",
                                "type": "string",
                                "description": "The catalog source that should be used to deploy the operator",
                                "default": "ibm-operator-catalog",
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "catalog_ibmoperators"
                                }
                            },
                            {
                                "name": "catalog_namespace",
                                "type": "string",
                                "description": "The namespace where the catalog has been deployed",
                                "default": "openshift-marketplace"
                            },
                            {
                                "name": "channel",
                                "type": "string",
                                "description": "The channel that should be used to deploy the operator",
                                "default": "v2.5",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "eventstreams.channel"
                                }
                            }
                        ],
                        "version": "v1.0.1",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-namespace",
                    "alias": "cp4i-mq-cluster",
                    "variables": [
                        {
                            "name": "name",
                            "value": "cp4i-mq-cluster"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "name",
                                "type": "string",
                                "description": "The value that should be used for the namespace"
                            },
                            {
                                "name": "ci",
                                "type": "bool",
                                "description": "Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)",
                                "default": false
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "create_operator_group",
                                "type": "bool",
                                "description": "Flag indicating that an operator group should be created in the namespace",
                                "default": true
                            },
                            {
                                "name": "argocd_namespace",
                                "type": "string",
                                "description": "The namespace where argocd has been deployed",
                                "default": "openshift-gitops"
                            }
                        ],
                        "version": "v1.11.2",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "Namespace name"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-mq-uniform-cluster",
                    "dependencies": [
                        {
                            "name": "namespace",
                            "ref": "cp4i-mq-cluster"
                        }
                    ],
                    "variables": [
                        {
                            "name": "storageClass",
                            "alias": "rwo_storage_class",
                            "scope": "global"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "namespace",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-namespace.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "mq",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "moduleRef": {
                                    "id": "namespace",
                                    "output": "name"
                                }
                            },
                            {
                                "name": "kubeseal_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "sealed_secrets_cert"
                                }
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "license",
                                "type": "string",
                                "description": "The Licesence for MQ on CP4i",
                                "default": "L-RJON-C7QG3S",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "mq.license"
                                }
                            },
                            {
                                "name": "license_use",
                                "type": "string",
                                "description": "License use. Production or NonProduction",
                                "default": "NonProduction",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "mq.license_use"
                                }
                            },
                            {
                                "name": "mqsc_configmap",
                                "type": "string",
                                "description": "Name of the config map which holds the MQSC configuration",
                                "default": "mq-uniform-cluster-mqsc-cm"
                            },
                            {
                                "name": "ini_configmap",
                                "type": "string",
                                "description": "Name of the config map which holds the ini configuration",
                                "default": "mq-uniform-cluster-ini-cm"
                            },
                            {
                                "name": "MQ_AvailabilityType",
                                "type": "string",
                                "description": "AvailabilityType of MQ. Possible Values are (SingleInstance/MultiInstance/NativeHA)",
                                "default": "SingleInstance"
                            },
                            {
                                "name": "storageClass",
                                "type": "string",
                                "description": "Incase of SingleInstance use RWO storage class. In case of MultiInstance use RWX. Here we chose SingleInstance.",
                                "default": "ibmc-block-gold"
                            },
                            {
                                "name": "mq_version",
                                "type": "string",
                                "description": "Version of MQ server",
                                "default": "9.2.4.0-r1",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "mq.version"
                                }
                            },
                            {
                                "name": "entitlement_key",
                                "type": "string",
                                "description": "The entitlement key required to access Cloud Pak images",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "entitlement_key"
                                }
                            }
                        ],
                        "version": "v1.0.4",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the module will be deployed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-namespace",
                    "alias": "cp4i-ace",
                    "variables": [
                        {
                            "name": "name",
                            "value": "cp4i-ace"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "name",
                                "type": "string",
                                "description": "The value that should be used for the namespace"
                            },
                            {
                                "name": "ci",
                                "type": "bool",
                                "description": "Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)",
                                "default": false
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "create_operator_group",
                                "type": "bool",
                                "description": "Flag indicating that an operator group should be created in the namespace",
                                "default": true
                            },
                            {
                                "name": "argocd_namespace",
                                "type": "string",
                                "description": "The namespace where argocd has been deployed",
                                "default": "openshift-gitops"
                            }
                        ],
                        "version": "v1.11.2",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "Namespace name"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-ace-designer",
                    "dependencies": [
                        {
                            "name": "namespace",
                            "ref": "cp4i-ace"
                        }
                    ],
                    "variables": [
                        {
                            "name": "storage_class_4_couchdb",
                            "alias": "rwo_storage_class",
                            "scope": "global"
                        },
                        {
                            "name": "storage_class_4_mapassist",
                            "alias": "rwx_storage_class",
                            "scope": "global"
                        },
                        {
                            "name": "is_map_assist_required",
                            "value": false
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [
                            "kubernetes",
                            "ocp3",
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "namespace",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-namespace.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "ace-operator",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-app-connect.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "platform-navigator",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-platform-navigator.git",
                                        "version": ">= 1.0.2"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "moduleRef": {
                                    "id": "namespace",
                                    "output": "name"
                                }
                            },
                            {
                                "name": "kubeseal_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "sealed_secrets_cert"
                                }
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "entitlement_key",
                                "type": "string",
                                "description": "The entitlement key required to access Cloud Pak images",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "entitlement_key"
                                }
                            },
                            {
                                "name": "is_ace_designer_required_dedicated_ns",
                                "type": "bool",
                                "description": "If ACE Designer instance need to be deployed in dedicated namespace",
                                "default": false
                            },
                            {
                                "name": "ace_designer_instance_namespace",
                                "type": "string",
                                "description": "It is beeter to manage ACE Designer instance workload in a dedicated namespace",
                                "default": "gitops-cp-ace-designer"
                            },
                            {
                                "name": "ace_version",
                                "type": "string",
                                "description": "The version of the ACE Designer should be installed",
                                "default": "",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "ace.version"
                                }
                            },
                            {
                                "name": "license",
                                "type": "string",
                                "description": "The license string that should be used for the instance",
                                "default": "",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "ace.license"
                                }
                            },
                            {
                                "name": "license_use",
                                "type": "string",
                                "description": "The possible values are CloudPakForIntegrationNonProduction or CloudPakForIntegrationProductionn",
                                "default": "",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "ace.license_use"
                                }
                            },
                            {
                                "name": "is_map_assist_required",
                                "type": "bool",
                                "description": "To enable mapassist feature",
                                "default": false
                            },
                            {
                                "name": "ace_designer_instance_name",
                                "type": "string",
                                "description": "If ACE Designer instance name needed to be overridden",
                                "default": ""
                            },
                            {
                                "name": "storage_class_4_couchdb",
                                "type": "string",
                                "description": "RWO Accessmode supported Storageclass",
                                "default": "portworx-db2-rwo-sc"
                            },
                            {
                                "name": "storage_class_4_mapassist",
                                "type": "string",
                                "description": "RWX Accessmode supported Storageclass",
                                "default": "portworx-rwx-gp-sc"
                            }
                        ],
                        "version": "v1.0.1",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the module will be deployed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-namespace",
                    "alias": "cp4i-mq",
                    "variables": [
                        {
                            "name": "name",
                            "value": "cp4i-mq"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "name",
                                "type": "string",
                                "description": "The value that should be used for the namespace"
                            },
                            {
                                "name": "ci",
                                "type": "bool",
                                "description": "Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)",
                                "default": false
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "create_operator_group",
                                "type": "bool",
                                "description": "Flag indicating that an operator group should be created in the namespace",
                                "default": true
                            },
                            {
                                "name": "argocd_namespace",
                                "type": "string",
                                "description": "The namespace where argocd has been deployed",
                                "default": "openshift-gitops"
                            }
                        ],
                        "version": "v1.11.2",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "Namespace name"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-queue-manager",
                    "dependencies": [
                        {
                            "name": "namespace",
                            "ref": "cp4i-mq"
                        }
                    ],
                    "variables": [
                        {
                            "name": "qmgr_name",
                            "value": "QM1"
                        },
                        {
                            "name": "qmgr_instance_name",
                            "value": "mq-instance"
                        },
                        {
                            "name": "config_map",
                            "value": "oms-queue-config"
                        },
                        {
                            "name": "storageClass",
                            "alias": "rwo_storage_class",
                            "scope": "global"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "namespace",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-namespace.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "mq",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "moduleRef": {
                                    "id": "namespace",
                                    "output": "name"
                                }
                            },
                            {
                                "name": "kubeseal_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "sealed_secrets_cert"
                                }
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "entitlement_key",
                                "type": "string",
                                "description": "The entitlement key required to access Cloud Pak images",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "entitlement_key"
                                }
                            },
                            {
                                "name": "license",
                                "type": "string",
                                "description": "License string for required MQ version",
                                "default": "L-RJON-C7QG3S",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "mq.license"
                                }
                            },
                            {
                                "name": "license_use",
                                "type": "string",
                                "description": "Usage for Production or Non-Production",
                                "default": "NonProduction",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "mq.license_use"
                                }
                            },
                            {
                                "name": "qmgr_name",
                                "type": "string",
                                "description": "Name of queue manager to be created",
                                "default": "QM1"
                            },
                            {
                                "name": "qmgr_instance_name",
                                "type": "string",
                                "description": "Name of MQ instance to be created",
                                "default": "telco-cloud"
                            },
                            {
                                "name": "cpulimits",
                                "type": "string",
                                "description": "CPU limits for the queue manager instance",
                                "default": "500m"
                            },
                            {
                                "name": "cpurequests",
                                "type": "string",
                                "description": "CPU requests for the queue manager instance",
                                "default": "500m"
                            },
                            {
                                "name": "storageClass",
                                "type": "string",
                                "description": "Storage class to be used for Qmgr",
                                "default": "portworx-db2-rwo-sc"
                            },
                            {
                                "name": "mq_version",
                                "type": "string",
                                "description": "Version of MQ to be installed",
                                "default": "9.2.4.0-r1",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "mq.version"
                                }
                            },
                            {
                                "name": "config_map",
                                "type": "string",
                                "description": "Name of config map to created"
                            }
                        ],
                        "version": "v1.0.6",
                        "outputs": [
                            {
                                "name": "instance_name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "qmgr_instance_name",
                                "description": "Name of queue manager created"
                            },
                            {
                                "name": "bin_dir"
                            },
                            {
                                "name": "config_map"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-namespace",
                    "alias": "cp4i-apic",
                    "variables": [
                        {
                            "name": "name",
                            "value": "cp4i-apic"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "name",
                                "type": "string",
                                "description": "The value that should be used for the namespace"
                            },
                            {
                                "name": "ci",
                                "type": "bool",
                                "description": "Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)",
                                "default": false
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "create_operator_group",
                                "type": "bool",
                                "description": "Flag indicating that an operator group should be created in the namespace",
                                "default": true
                            },
                            {
                                "name": "argocd_namespace",
                                "type": "string",
                                "description": "The namespace where argocd has been deployed",
                                "default": "openshift-gitops"
                            }
                        ],
                        "version": "v1.11.2",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "Namespace name"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-apic",
                    "dependencies": [
                        {
                            "name": "namespace",
                            "ref": "cp4i-apic"
                        }
                    ],
                    "variables": [
                        {
                            "name": "storage_class",
                            "alias": "rwo_storage_class",
                            "scope": "global"
                        },
                        {
                            "name": "entitlement_key",
                            "scope": "global"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [
                            "kubernetes",
                            "ocp3",
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "namespace",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-namespace.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "apic-operator",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-apic-operator.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 0.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "moduleRef": {
                                    "id": "namespace",
                                    "output": "name"
                                }
                            },
                            {
                                "name": "kubeseal_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "sealed_secrets_cert"
                                }
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "license_id",
                                "type": "string",
                                "description": "The license id",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "apic.license"
                                }
                            },
                            {
                                "name": "usage",
                                "type": "string",
                                "description": "The usage as production or nonproduction",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "apic.license_use"
                                }
                            },
                            {
                                "name": "profile",
                                "type": "string",
                                "description": "apic profile template",
                                "default": "\"n1xc7.m48\" "
                            },
                            {
                                "name": "apic_version",
                                "type": "string",
                                "description": "apic version",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "apic.version"
                                }
                            },
                            {
                                "name": "storage_class",
                                "type": "string",
                                "description": "specify block storage class with min 4 IOPs",
                                "default": ""
                            },
                            {
                                "name": "entitlement_key",
                                "type": "string",
                                "description": "Entitlement key value"
                            },
                            {
                                "name": "catalog",
                                "type": "string",
                                "description": "The catalog source that should be used to deploy the operator",
                                "default": "ibm-operator-catalog"
                            },
                            {
                                "name": "catalog_namespace",
                                "type": "string",
                                "description": "The namespace where the catalog has been deployed",
                                "default": "openshift-marketplace"
                            }
                        ],
                        "version": "v0.0.1",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the module will be deployed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-namespace",
                    "alias": "cp4i-es",
                    "variables": [
                        {
                            "name": "name",
                            "value": "cp4i-es"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "name",
                                "type": "string",
                                "description": "The value that should be used for the namespace"
                            },
                            {
                                "name": "ci",
                                "type": "bool",
                                "description": "Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)",
                                "default": false
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "create_operator_group",
                                "type": "bool",
                                "description": "Flag indicating that an operator group should be created in the namespace",
                                "default": true
                            },
                            {
                                "name": "argocd_namespace",
                                "type": "string",
                                "description": "The namespace where argocd has been deployed",
                                "default": "openshift-gitops"
                            }
                        ],
                        "version": "v1.11.2",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "Namespace name"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-event-streams",
                    "dependencies": [
                        {
                            "name": "namespace",
                            "ref": "cp4i-es"
                        }
                    ],
                    "variables": [
                        {
                            "name": "kafka_storagetype",
                            "value": "persistent-claim"
                        },
                        {
                            "name": "kafka_storageclass",
                            "alias": "rwo_storage_class",
                            "scope": "global"
                        },
                        {
                            "name": "zookeeper_storagetype",
                            "value": "persistent-claim"
                        },
                        {
                            "name": "zookeeper_storageclass",
                            "alias": "rwo_storage_class",
                            "scope": "global"
                        },
                        {
                            "name": "entitlement_key",
                            "scope": "global"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [
                            "kubernetes",
                            "ocp3",
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "namespace",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-namespace.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "eventstreams",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-event-streams-operator.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n      payload = object({\n        repo = string\n        url  = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n      payload = object({\n        repo = string\n        url  = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo    = string\n        url     = string\n        path    = string\n      })\n      payload = object({\n        repo = string\n        url  = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo     = string\n    url      = string\n    username = string\n    token    = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "moduleRef": {
                                    "id": "namespace",
                                    "output": "name"
                                }
                            },
                            {
                                "name": "kubeseal_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "default": "",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "sealed_secrets_cert"
                                }
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "entitlement_key",
                                "type": "string",
                                "description": "The entitlement key required to access Cloud Pak images",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "entitlement_key"
                                }
                            },
                            {
                                "name": "license_use",
                                "type": "string",
                                "description": "Usage for Production or Non-Production",
                                "default": "CloudPakForIntegrationNonProduction",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "eventstreams.license_use"
                                }
                            },
                            {
                                "name": "requestIbmServices_iam",
                                "type": "bool",
                                "description": "IAM services",
                                "default": true
                            },
                            {
                                "name": "requestIbmServices_monitoring",
                                "type": "bool",
                                "description": "Monitoring services",
                                "default": true
                            },
                            {
                                "name": "kafka_replicas",
                                "type": "number",
                                "description": "Number of kafka replicas",
                                "default": "\"3\""
                            },
                            {
                                "name": "zookeeper_replicas",
                                "type": "number",
                                "description": "Number of zookeeper replicas",
                                "default": "\"3\""
                            },
                            {
                                "name": "es_version",
                                "type": "string",
                                "description": "Version of Event streams to be installed",
                                "default": "10.5.0"
                            },
                            {
                                "name": "cpulimits",
                                "type": "string",
                                "description": "CPU limits for the kafka instance",
                                "default": "1"
                            },
                            {
                                "name": "cpurequests",
                                "type": "string",
                                "description": "CPU requests for the kafka instance",
                                "default": "100m"
                            },
                            {
                                "name": "memorylimits",
                                "type": "string",
                                "description": "Memory limits for the kafka instance",
                                "default": "2Gi"
                            },
                            {
                                "name": "memoryrequests",
                                "type": "string",
                                "description": "Memory requests for the kafka instance",
                                "default": "128Mi"
                            },
                            {
                                "name": "kafka_storageclass",
                                "type": "string",
                                "description": "Storage class for kafka - applicable only for persistent storage type",
                                "default": "ibmc-vpc-block-10iops-tier"
                            },
                            {
                                "name": "zookeeper_storageclass",
                                "type": "string",
                                "description": "Storage class for zookeeper - applicable only for persistent storage type",
                                "default": "ibmc-vpc-block-10iops-tier"
                            },
                            {
                                "name": "kafka_storagetype",
                                "type": "string",
                                "description": "Storage type for kafka",
                                "default": "persistent-claim"
                            },
                            {
                                "name": "zookeeper_storagetype",
                                "type": "string",
                                "description": "Storage type for zookeeper",
                                "default": "persistent-claim"
                            },
                            {
                                "name": "kafka_storagesize",
                                "type": "string",
                                "description": "Storage size - applicable only for persistent storage type",
                                "default": "10Gi"
                            },
                            {
                                "name": "zookeeper_storagesize",
                                "type": "string",
                                "description": "Storage size - applicable only for persistent storage type",
                                "default": "4Gi"
                            },
                            {
                                "name": "service_name",
                                "type": "string",
                                "description": "Event stream instance name",
                                "default": "es-instance"
                            }
                        ],
                        "version": "v1.1.3",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the module"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the module will be deployed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-namespace",
                    "alias": "cp4i-pn",
                    "variables": [
                        {
                            "name": "name",
                            "value": "cp4i-pn"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "name",
                                "type": "string",
                                "description": "The value that should be used for the namespace"
                            },
                            {
                                "name": "ci",
                                "type": "bool",
                                "description": "Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)",
                                "default": false
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "create_operator_group",
                                "type": "bool",
                                "description": "Flag indicating that an operator group should be created in the namespace",
                                "default": true
                            },
                            {
                                "name": "argocd_namespace",
                                "type": "string",
                                "description": "The namespace where argocd has been deployed",
                                "default": "openshift-gitops"
                            }
                        ],
                        "version": "v1.11.2",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "Namespace name"
                            }
                        ]
                    }
                },
                {
                    "name": "gitops-cp-platform-navigator",
                    "dependencies": [
                        {
                            "name": "namespace",
                            "ref": "cp4i-pn"
                        }
                    ],
                    "variables": [
                        {
                            "name": "storageclass",
                            "alias": "rwx_storage_class",
                            "scope": "global"
                        }
                    ],
                    "enrichedMetadata": {
                        "platforms": [
                            "ocp4"
                        ],
                        "dependencies": [
                            {
                                "id": "gitops",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-tools-gitops.git",
                                        "version": ">= 1.1.0"
                                    }
                                ]
                            },
                            {
                                "id": "namespace",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-namespace.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "catalogs",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            },
                            {
                                "id": "dep-manager",
                                "refs": [
                                    {
                                        "source": "github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git",
                                        "version": ">= 1.0.0"
                                    }
                                ]
                            }
                        ],
                        "variables": [
                            {
                                "name": "gitops_config",
                                "type": "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })",
                                "description": "Config information regarding the gitops repo structure",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "gitops_config"
                                }
                            },
                            {
                                "name": "git_credentials",
                                "type": "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))",
                                "description": "The credentials for the gitops repo(s)",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "git_credentials"
                                }
                            },
                            {
                                "name": "namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "moduleRef": {
                                    "id": "namespace",
                                    "output": "name"
                                }
                            },
                            {
                                "name": "subscription_namespace",
                                "type": "string",
                                "description": "The namespace where the application should be deployed",
                                "default": "openshift-operators"
                            },
                            {
                                "name": "server_name",
                                "type": "string",
                                "description": "The name of the server",
                                "default": "default",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "server_name"
                                }
                            },
                            {
                                "name": "channel",
                                "type": "string",
                                "description": "The channel from which the Platform Navigator should be installed",
                                "default": "",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "platform_navigator.channel"
                                }
                            },
                            {
                                "name": "instance_version",
                                "type": "string",
                                "description": "The version of the Platform Navigator should be installed",
                                "default": "",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "platform_navigator.version"
                                }
                            },
                            {
                                "name": "license",
                                "type": "string",
                                "description": "The license string that should be used for the instance",
                                "default": "L-RJON-BUVMQX",
                                "moduleRef": {
                                    "id": "dep-manager",
                                    "output": "platform_navigator.license"
                                }
                            },
                            {
                                "name": "catalog",
                                "type": "string",
                                "description": "The catalog source that should be used to deploy the operator",
                                "default": "ibm-operator-catalog",
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "catalog_ibmoperators"
                                }
                            },
                            {
                                "name": "catalog_namespace",
                                "type": "string",
                                "description": "The namespace where the catalog has been deployed",
                                "default": "openshift-marketplace"
                            },
                            {
                                "name": "replica_count",
                                "type": "number",
                                "description": "The number of replicas to create for the platform navigator",
                                "default": "2"
                            },
                            {
                                "name": "entitlement_key",
                                "type": "string",
                                "description": "The entitlement key required to access Cloud Pak images",
                                "sensitive": true,
                                "moduleRef": {
                                    "id": "catalogs",
                                    "output": "entitlement_key"
                                }
                            },
                            {
                                "name": "kubeseal_cert",
                                "type": "string",
                                "description": "The certificate/public key used to encrypt the sealed secrets",
                                "moduleRef": {
                                    "id": "gitops",
                                    "output": "sealed_secrets_cert"
                                }
                            },
                            {
                                "name": "storageclass",
                                "type": "string",
                                "description": "For Platformnavigator we require RWX storage class.",
                                "default": "portworx-rwx-gp-sc"
                            }
                        ],
                        "version": "v1.0.6",
                        "outputs": [
                            {
                                "name": "name",
                                "description": "The name of the platform navigator instance"
                            },
                            {
                                "name": "namespace",
                                "description": "The namespace where the platform navigator instance has been deployed"
                            },
                            {
                                "name": "branch",
                                "description": "The branch where the module config has been placed"
                            },
                            {
                                "name": "server_name",
                                "description": "The server where the module will be deployed"
                            },
                            {
                                "name": "layer",
                                "description": "The layer where the module is deployed"
                            },
                            {
                                "name": "type",
                                "description": "The type of module where the module is deployed"
                            }
                        ]
                    }
                }
            ],
            "variables": [
                {
                    "name": "rwo_storage_class",
                    "type": "string",
                    "description": "ReadWriteOnce access type Storage Class"
                },
                {
                    "name": "rwx_storage_class",
                    "type": "string",
                    "description": "ReadWriteMany access type Storage Class"
                },
                {
                    "name": "entitlement_key",
                    "type": "string",
                    "description": "The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key",
                    "sensitive": true
                },
                {
                    "name": "gitops_repo_host",
                    "type": "string",
                    "description": "The host for the git repository."
                },
                {
                    "name": "gitops_repo_type",
                    "type": "string",
                    "description": "The type of the hosted git repository (github or gitlab)."
                },
                {
                    "name": "gitops_repo_org",
                    "type": "string",
                    "description": "The org/group where the git repository exists/will be provisioned."
                },
                {
                    "name": "gitops_repo_repo",
                    "type": "string",
                    "description": "The short name of the repository (i.e. the part after the org/group name)"
                },
                {
                    "name": "gitops_repo_username",
                    "type": "string",
                    "description": "The username of the user with access to the repository"
                },
                {
                    "name": "gitops_repo_token",
                    "type": "string",
                    "description": "The personal access token used to access the repository",
                    "sensitive": true
                },
                {
                    "name": "gitops-cluster-config_banner_text",
                    "type": "string",
                    "description": "The text that will appear in the top banner in the cluster"
                },
                {
                    "name": "server_url",
                    "type": "string",
                    "description": "The url for the OpenShift api"
                },
                {
                    "name": "cluster_login_token",
                    "type": "string",
                    "description": "Token used for authentication",
                    "sensitive": true
                }
            ]
        }
    }
}